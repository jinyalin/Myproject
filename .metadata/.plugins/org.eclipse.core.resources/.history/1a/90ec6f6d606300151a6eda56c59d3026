#!/usr/bin/python
#coding=UTF-8
import os,sys
import pexpect
import struct
import fcntl
import termios
import signal
reload(sys)
sys.setdefaultencoding('utf8')
def sigwinch_passthrough (sig, data):
    winsize = getwinsize()
    global ssh
    ssh.setwinsize(winsize[0],winsize[1])
def getwinsize():
    if 'TIOCGWINSZ' in dir(termios):
        TIOCGWINSZ = termios.TIOCGWINSZ
    else:
        TIOCGWINSZ = 1074295912L # Assume
    s = struct.pack('HHHH', 0, 0, 0, 0)
    x = fcntl.ioctl(sys.stdout.fileno(), TIOCGWINSZ, s)
    return struct.unpack('HHHH', x)[0:2]
if __name__=="__main__":
    while True:
        lname = os.popen("id -un")
        name = lname.read().strip()
        keydir = "/home/"+name
        user = "bjywb"
        ip_file = '/tmp/ip_test.txt'
        ip_dic = {}
        num = 0
        flag = 0
        group = ""
        fu = file("/tmp/UserGroup.txt")
        for line in fu.readlines():
            gline=line.strip().split()
            if gline[1]=='运维组':                
                flag=1
            else:
                if gline[0]==name:
                    group=gline[1]
                    flag=2

        f = file(ip_file)
        excution_list = []
        for line in f.readlines():
            print line,
            if '------' in line:continue
            if line.count('\n')==len(line):continue
            f_line = line.strip().split()
            num = f_line[0]
            host = f_line[2]
            port = f_line[5]
            if len(line) == 0:break
            ip_dic[num] = 'ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -i '+keydir+'/.ssh/hskj_20130606_'+user+' '+user+'@%s -p %s'  %(host,port)
        try:
            option = raw_input("请选择:\n")
            if option in ip_dic.keys():
#                print ip_dic[option]
                ssh = pexpect.spawn(ip_dic[option])
                ssh.expect("key")
                ssh.sendline("&U*I(O1208")
                ssh.expect("$")
                ssh.sendline("echo name "+name)
                signal.signal(signal.SIGWINCH, sigwinch_passthrough)
                size = getwinsize()
                ssh.setwinsize(size[0], size[1])
                ssh.interact()
            else:
                print "您输入的服务器标识不存在！"
        except (Exception,SyntaxError,KeyboardInterrupt):
            print "您输入的内容存在问题，请重新输入!"